; -*- emacs-lisp -*-
(load-file "@srcdir@/elk-test.el")
(load-file "@srcdir@/bashdb.el")

(defun regexp-stack-test (location-str)
  "Test to see that location-str matches bashdb--stack-frame-regexp"
  (assert-equal 0 (string-match bashdb--stack-frame-regexp location-str))
)
(defun regexp-breakpoint-test (location-str)
  "Test to see that location-str matches bashdb--breakpoint-regexp"
  (assert-equal 0 (string-match bashdb--breakpoint-regexp location-str))
)
(defun regexp-test (location-str file-str)
  "Test to see that location-str matches gud-bashdb-marker-regexp"
  (assert-equal 0 (string-match gud-bashdb-marker-regexp location-str))
  (assert-equal file-str
		(substring location-str
			   (match-beginning gud-bashdb-marker-regexp-file-group) 
			   (match-end gud-bashdb-marker-regexp-file-group)))
)
(deftest "bashdb-marker-regexp-test"

  (regexp-breakpoint-test
   "1   breakpoint keep y   /usr/local/bin/bashdb:10")
  (regexp-stack-test
   "->0 in file `/src/external-cvs/bashdb-3.1/test/hanoi.sh' at line 31
")
  (regexp-stack-test 
   "##1 source(\"/src/external-cvs/bashdb-3.1/test/hanoi.sh\") called from file `/usr/local/bin/bashdb' at line 280
")

  (regexp-stack-test 
   "##2 main() called from file `/usr/local/bin/bashdb' at line 0
")
  (regexp-test 
   "(e:\\sources\\capfilterscanner\\capanalyzer.sh:3):
"
   "e:\\sources\\capfilterscanner\\capanalyzer.sh"
   )
  (regexp-test 
   "(e:\\Documents and Settings\\jsmith\\My Documents\\cpanalyzer test.sh:3):
"
   "e:\\Documents and Settings\\jsmith\\My Documents\\cpanalyzer test.sh"
   )  
  (regexp-test 
   "(/etc/init.d/network:39):
"
   "/etc/init.d/network"
   )
)

(defun position-regexp-test (location-str file-str line-str)
  "Test to see that location-str matches position-regexp-test with the correct
file and line submatches."
  (assert-equal 0 (string-match pydb-position-re location-str))
  (assert-equal file-str (match-string pydb-marker-regexp-file-group
                                       location-str))
  (assert-equal line-str (match-string pydb-marker-regexp-line-group
                                       location-str))
  )
(deftest "bashdb-position-re-test"

  (position-regexp-test 
   "(e:\\sources\\capfilterscanner\\capanalyzer.py:3):
"
   "e:\\sources\\capfilterscanner\\capanalyzer.py" "3"
   )
  (position-regexp-test 
   "(e:\\Documents and Settings\\jsmith\\My Documents\\cpanalyzer test.py:3):
"
   "e:\\Documents and Settings\\jsmith\\My Documents\\cpanalyzer test.py" "3"
   )  
  (position-regexp-test 
   "(/etc/init.d/network:29):
"
   "/etc/init.d/network" "29"
   )
)  
   
(deftest "bashdb-get-script-name-test"
  (assert-equal '("foo" nil) (bashdb-get-script-name '("foo")))
  (assert-equal '("foo" t) (bashdb-get-script-name '("-A" "1" "foo")))
  (assert-equal '("foo" nil) (bashdb-get-script-name '("bashdb" "-L" "." "foo")))
  (assert-equal '("foo" t) (bashdb-get-script-name 
		       '("--debugger bashdb" "--annotate" "1" "foo")))
  (assert-equal '("bar" t) (bashdb-get-script-name 
		       '("--debugger bashdb" "--annotate" "1" "bar" "foo")))
)

(build-suite "bashdb-suite" "bashdb-marker-regexp-test" "bashdb-get-script-name-test")
(run-elk-test "bashdb-suite" "Test Emacs routines to run the bash debugger")
