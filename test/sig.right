(sig.sh:7):
7:	if [[ "$1"x != x ]] ; then 
*** Testing that we have our signal set up...
Signal       Stop   Print   Stack     Value
EXIT         stop   noprint nostack   trap -- '_Dbg_exit_handler "$BASH_COMMAND"' EXIT
EXIT         stop   noprint nostack   trap -- '_Dbg_exit_handler "$BASH_COMMAND"' EXIT
SIGINT       stop   print   showstack trap -- '_Dbg_sig_handler 2 "$BASH_COMMAND" "$@"' SIGINT
SIGQUIT      stop   print   showstack trap -- '_Dbg_sig_handler 3 "$BASH_COMMAND" "$@"' SIGQUIT
SIGILL       stop   print   showstack trap -- '_Dbg_sig_handler 4 "$BASH_COMMAND" "$@"' SIGILL
SIGTRAP      stop   print   showstack trap -- '_Dbg_sig_handler 5 "$BASH_COMMAND" "$@"' SIGTRAP
SIGTERM      stop   print   showstack trap -- '_Dbg_sig_handler 15 "$BASH_COMMAND" "$@"' SIGTERM
*** Testing handle command...
Bad signal name: foo
Bad signal number: 1000
Need to give a command: stop, nostop, stack, nostack, print, noprint
Program received signal SIGTERM (15)...
*** Should not have printed a stack trace above...
Signal       Stop   Print   Stack     Value
EXIT         stop   noprint nostack   trap -- '_Dbg_exit_handler "$BASH_COMMAND"' EXIT
EXIT         stop   noprint nostack   trap -- '_Dbg_exit_handler "$BASH_COMMAND"' EXIT
SIGINT       nostop print   showstack trap -- '_Dbg_sig_handler 2 "$BASH_COMMAND" "$@"' SIGINT
SIGQUIT      stop   print   showstack trap -- '_Dbg_sig_handler 3 "$BASH_COMMAND" "$@"' SIGQUIT
SIGILL       stop   print   showstack trap -- '_Dbg_sig_handler 4 "$BASH_COMMAND" "$@"' SIGILL
SIGTRAP      stop   print   showstack trap -- '_Dbg_sig_handler 5 "$BASH_COMMAND" "$@"' SIGTRAP
SIGTERM      stop   noprint showstack trap -- '_Dbg_sig_handler 15 "$BASH_COMMAND" "$@"' SIGTERM
Program received signal SIGTERM (15)...
->0 in file `dbg-cmds.inc' at line 2
->1 _Dbg_cmd_eval("kill", "-TERM", "$$") called from file `dbg-cmds.inc' at line 243
##2 _Dbg_cmdloop() called from file `dbg-sig.inc' at line 190
##3 _Dbg_debug_trap_handler("0", "[[ "$1"x != x ]]") called from file `sig.sh' at line 7
##4 source("sig.sh") called from file `bashdb' at line 248
##5 main() called from file `bashdb' at line 0
*** Should have printed a stack trace above...
->0 in file `sig.sh' at line 629
##1 source("sig.sh") called from file `bashdb' at line 248
##2 main() called from file `bashdb' at line 0
Program received signal SIGINT (2)...
->0 in file `sig.sh' at line 23
->1 source("sig.sh") called from file `bashdb' at line 248
##2 main() called from file `bashdb' at line 0
Program received signal SIGINT (2)...
->0 in file `sig.sh' at line 24
->1 source("sig.sh") called from file `bashdb' at line 248
##2 main() called from file `bashdb' at line 0
Debugged program terminated normally. Use q to quit or R to restart.
