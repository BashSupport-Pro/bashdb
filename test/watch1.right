(dbg-test1.sh:22):
22:	x=22
+ # Test of watchpoint handling
+ # 
+ ### Should fail since xyxxy is not defined...
+ watch xyxxy
Can't set watch: no such variable xyxxy.
+ info break
No breakpoints have been set.
No watch expressions have been set.
+ ### Test a simple breakpoint...
+ eval xx=1
+ watch xx
 0: ($xx)==1 arith: 0
+ info break
No breakpoints have been set.
Num Type       Enb  Expression
0   watchpoint y    $xx
+ # 
+ # Now try enable and disable
+ # 
+ ### Try testing enable/disable...
+ en 0w
Watchpoint entry 0 already enabled so nothing done.
+ L 
No breakpoints have been set.
Num Type       Enb  Expression
0   watchpoint y    $xx
No actions have been set.
+ dis 0W
Watchpoint entry 0 disabled.
+ L 
No breakpoints have been set.
Num Type       Enb  Expression
0   watchpoint n    $xx
No actions have been set.
+ ### Try deleting nonexistent watchpoint...
+ delete 10w
Watchpoint entry 10 doesn't exist so nothing done.
+ # 
+ ### Test display of watchpoints...
+ watche y > 25
 1: (y > 25)==0 arith: 1
+ info break
No breakpoints have been set.
Num Type       Enb  Expression
0   watchpoint n    $xx
1   watchpoint y    y > 25
+ delete 0w
+ info break
No breakpoints have been set.
Num Type       Enb  Expression
1   watchpoint y    y > 25
+ delete 1w
+ info break
No breakpoints have been set.
No watch expressions have been set.
+ step 
(dbg-test1.sh:23):
23:	y=23
+ watch x
 2: ($x)==22 arith: 0
+ restart -B -q -L .. -x restart2.cmd dbg-test1.sh
Restarting with: -B -q -L .. -x restart2.cmd dbg-test1.sh
Watchpoint : $x changed:
  old value: '22'
  new value: ''
(bashdb:245):
245:	set -o functrace
+ # 2nd part of Restart test
+ l 
245:==>set -o functrace
246:   if [[ -z $_Dbg_cmd ]] ; then 
247:     . $_source_file
248:   else 
249:     eval $_Dbg_cmd
250:   fi
251:   
252:   
253:   # end of bashdb
254:   
+ info break
No breakpoints have been set.
Num Type       Enb  Expression
2   watchpoint y    $x
+ cont 
(dbg-test1.sh:22):
22:	x=22
+ quit 
