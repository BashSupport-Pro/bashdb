#!@SH_PROG@
# -*- shell-script -*-
PS4='-(${BASH_SOURCE}:${LINENO}): ${FUNCNAME[0]} - [${SHLVL},${BASH_SUBSHELL}, $?]
'

this_script=$0

# Test _Dbg_get_source_line
test_get_source_line()
{
    typeset source_line
    _Dbg_get_source_line 2 $this_script
    assertEquals '# -*- shell-script -*-' "$source_line"
}

# Test readin and maxline
test_readin_maxline()
{
    typeset filename
    shu=$(_Dbg_resolve_expand_filename $shunit_file)
    _Dbg_readin ${shu}
    assertEquals "Read ${shu} status test" '0' $?
    typeset file2
    file2=$(_Dbg_is_file ${shu})
    assertEquals "Cached read of ${shu} test" '0' $?
    assertNotEquals "Getting cached file name back" '' "$file2"
    typeset -i maxline
    maxline=$(_Dbg_get_maxline $file2)
    assertEquals "Line-count of $file exit status" '0' $?
    typeset -i shunit_lines

    # FIXME should we do this entirely in bash?
    shunit_lines=$(wc -l $shunit_file | cut -d' ' -f 1)

    # We'll assume shunit2 isn't going to get smaller ;-)
    assertEquals $shunit_lines $maxline
}

# Test check_line
# test should appear after tests which read in source.
test_check_line() 
{
    _Dbg_errmsg() {
	errmsg+=("$1")
    }
    typeset -a errmsg; errmsg=()
    _Dbg_check_line
    assertNotEquals "check_line with wrong number of args" '0' $?
    _Dbg_check_line a 
    assertNotEquals "check_line with wrong number of args" '0' $?
    _Dbg_check_line a b c
    assertNotEquals "check_line with wrong number of args" '0' $?
    _Dbg_readin "$shunit_file"
    _Dbg_check_line 10 $shunit_file
    assertEquals "check_line with an in_range number for $shunit_file" '0' $?
    assertEquals "error queue empty so far for $shunit_file" '0' ${#errmsg[@]}
    _Dbg_check_line 10000 $shunit_file
    assertNotEquals "check_line with wrong number of args" '0' $?
    assertEquals "error message generated" '1' ${#errmsg[@]}
    _Dbg_check_line 10000 $shunit_file
}

# Make sure @top_builddir@ has a trailing slash
if [ '@abs_top_srcdir@' = '' ] ; then
  echo "Something is wrong abs_top_srcdir is not set."
 exit 1
fi

abs_top_srcdir=@abs_top_srcdir@
abs_top_srcdir=${abs_top_srcdir%%/}/

_Dbg_libdir=$abs_top_srcdir
set -- -q  # Don't need to show banner
. ${abs_top_srcdir}dbg-pre.sh
. ${abs_top_srcdir}lib/filecache.sh
. ${abs_top_srcdir}lib/file.sh
. ${abs_top_srcdir}lib/msg.sh

# load shunit2
shunit_file=${abs_top_srcdir}test/unit/shunit2
. ${shunit_file}

