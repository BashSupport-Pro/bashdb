(nexting.sh:5):
5:	p
+###############################
+break 5
Breakpoint 1 set in file nexting.sh, line 5.
+break 3
Breakpoint 2 set in file nexting.sh, line 3.
+info break
Num Type       Disp Enb What
----------------------------
1   breakpoint keep y   nexting.sh:5
2   breakpoint keep y   nexting.sh:3
+disable 1
Breakpoint entry 1 disabled.
+# Already disabled.
+disable 1
** Breakpoint entry 1 already disabled, so nothing done.
+# Invalid disable
+disable 10
** Breakpoint entry 10 doesn't exist, so nothing done.
+continue
Breakpoint 2 hit (1 times).
(nexting.sh:3):
3:	p() { echo ${BASH_SOURCE[1]##*/}:${BASH_LINENO[0]}; echo '==='; }
+info break
Num Type       Disp Enb What
----------------------------
1   breakpoint keep n   nexting.sh:5
2   breakpoint keep y   nexting.sh:3
+enable 1
Breakpoint entry 1 enabled.
+# enable an already enabled breakpoint
+enable 2
** Breakpoint entry 2 already enabled, so nothing done.
+disable 2
Breakpoint entry 2 disabled.
+break 6
Breakpoint 3 set in file nexting.sh, line 6.
+enable 10
** Breakpoint entry 10 doesn't exist, so nothing done.
+continue
nexting.sh:5
===
Breakpoint 3 hit (1 times).
(nexting.sh:6):
6:	p ; x=6
+# Should get back to 6
+info break
Num Type       Disp Enb What
----------------------------
1   breakpoint keep y   nexting.sh:5
2   breakpoint keep n   nexting.sh:3
3   breakpoint keep y   nexting.sh:6
+info program
Program stopped.
It stopped at breakpoint 3.
Next statement to be run is:
	p
+c
nexting.sh:6
===
Breakpoint 3 hit (2 times).
(nexting.sh:6):
6:	p ; x=6
+info break
Num Type       Disp Enb What
----------------------------
1   breakpoint keep y   nexting.sh:5
2   breakpoint keep n   nexting.sh:3
3   breakpoint keep y   nexting.sh:6
	breakpoint already hit 1 time
+info program
Program stopped.
It stopped at breakpoint 3.
Next statement to be run is:
	x=6
+quit
bashdb: That's all, folks...
