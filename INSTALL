SHORT INSTRUCTIONS:

0. download the latest bash debugger from: 
   http://prdownloads.sourceforge.net/bashdb/?sort_by=date&sort=desc

   The name should start out bashdb-3.x...

   and ungzip/untar it. If you are reading this, you've
   probably done that already.

1. Make your current directory the debugger directory.
   configure, build, test, and install the debugger:

       cd bashdb-3.x... # <-- put name of realease for 3.x...
       ./configure && make && make check 
       su -c 'make install'

That's it!   

- - - - 

This debugger needs a debugger-enabled version of Bash 3.0 which
contains things like the ability to step into functions automatically,
give tracebacks, and list source-file information. When configuring
bash 3.0, the option --enable-debugger should be used.

It is possible to try out the debugger without installing it by using
the bashdb script that is in this directory. To do so you would invoke
your script as follows, assuming you are currently in the directory
(debugger) that you originally found this file in.

$BASH -L . ./bashdb *script-to-be-debugged* *options-to-debugged-program*

where $BASH above is bash 3.0 with debugging enabled.

A downside to this approach is that $0 in will be ``bashdb'' (or more
likely ``./bashdb'') rather than the name of the script to be
debugged. Also, the parameters to the bashdb invocation do not appear
in a stack trace. If this is a problem, then you will have to install
the debugger, or modify the script to be debugged to point to the
debugger-enabled version of bash.  For example if your script were in
this directory (debugger) as well is your current working directory
(as shown by ``pwd''), then having this at the beginning of your
script:

#!/some-location/bash --debugger 

might also work.

For information on the differences between "bash --debugger" and
bashdb, see Chapter 2 (Getting In and Out) of the bashdb documentation
(bashdb.info, bashdb.html, or bashdb.texi)

Steps 0 and 1 you've probably already done if you are reading these
instructions.

0. download the latest bash debugger from: 
   http://prdownloads.sourceforge.net/bashdb/?sort_by=date&sort=desc

   The name should start out bashdb-3.x...

1. ungzip/untar the bashdb debugger package.
      gzcat bashdb-3.x... | tar -xvpf -  # <-- put name of release for 3.x...

   (There's a shorter way to do this GNU tar 1.15 or later)  

2. Make your current directory the debugger directory.

   cd bashdb-3.x... 

3. Look at configure help options and decide what you want:
     ./configure --help 

   is your friend here.

4. configure the debugger to suit your needs:
     ./configure  # you may want to add options gleened from step 3 above.

   There is a lot of verbiage, but do pay attention to any errors or
   warning you see here.

5. Build:
     make         # make options, but I think none are generally needed

   Any old "make" should work, but if it doesn't, use GNU make (sometimes
   installed as "gmake". Again, even though there is verbiage pay attention 
   to errors. If you don't have texi2html you may see some errors in building
   HTML pages; these you can ignore.

6. Run the regression tests:
     make check   # or gmake check 

7. Install the debugger:
     su -c 'make install'

   As above, pay attention to errors. In particular here if you don't have
   permission to fully install or overwrite existing files you may get a 
   message that you can't run "bash --debugger" but must use the "bashdb"
   script. See above for a larger discussion of the difference.
   
No, really. that's it!

$Id: INSTALL,v 1.1 2006/01/02 23:34:20 rockyb Exp $
